name: CI/CD
on:
  pull-request:
  push:
    tags:
      - "v*"
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DISTRIBUTION_ARTIFACTS: "lazyfeed-distribution-artifacts"

jobs:

  tests:
    name: "Test Python ${{ matrix.python }} in ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.10', '3.11', '3.12']
        os: ['windows-latest', 'ubuntu-latest']
    steps:

      - name: "Checkout project"
        uses: actions/checkout@v4

      - name: "Install uv"
        uses: astral-sh/setup-uv@v2

      - name: "Install Python ${{ matrix.python }}"
        run: |
          uv python install ${{ matrix.python }}

      - name: "Install development dependencies"
        run: |
          uv sync --all-extras --dev

      - name: "Testing ${{ matrix.python }} in ${{ matrix.os }}"
        run: |
          uv run pytest tests

  build:
    name: "Build distribution artifacts"
    runs-on: "ubuntu-latest"
    needs: tests
    steps:

      - name: "Checkout project"
        uses: actions/checkout@v4

      - name: "Install uv"
        uses: astral-sh/setup-uv@v2

      - name: "Install Python ${{ matrix.python }}"
        run: |
          uv python install ${{ matrix.python }}

      - name: "Build project"
        run: |
          uv build

      - name: "Upload distribution artifacts"
        uses: actions/upload-artifact@v2
        with:
          path: dist/
          name: ${{ env.DISTRIBUTION_ARTIFACTS }}

  release:
    name: "Release project"
    runs-on: "ubuntu-latest"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/project/lazyfeed
    permissions:
      id-token: write
    steps:

      - name: "Download distribution artifacts"
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DISTRIBUTION_ARTIFACTS }}
          path: dist

      - name: "Release to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1.10.2
        with:
          packages-dir: dist
          print-hash: true
          skip-existing: true

